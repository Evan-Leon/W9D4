{"version":3,"sources":["./frontend/follow_toggle.js","./frontend/twitter_api_util.js","webpack/bootstrap","./frontend/twitter.js"],"names":[],"mappings":";;;;;;;;;AAAA,uBAAuB,mBAAO,CAAC,0DAAoB;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA,KAAK;AACL;;;AAGA,8B;;;;;;;;;;ACnCA;;AAEA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,KAAK;;AAEL,GAAG;;AAEH;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA,KAAK;;;AAGL;;;AAGA;;AAEA,gC;;;;;;UCxBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,qBAAqB,mBAAO,CAAC,oDAAiB;;;;;;;;;;AAU9C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,E","file":"bundle.js","sourcesContent":["const twitterAPIUtil = require(\"./twitter_api_util\");\nfunction FollowToggle($button){\n    this.userId = $button.data(\"user-id\");\n    this.initialFollowState = $button.data(\"initial-follow-state\");\n    this.$button = $button;\n    this.render();\n    this.handleClick();\n    \n}\n\nFollowToggle.prototype.render = function() {\n    if (this.initialFollowState == \"unfollowed\") {\n        this.$button.text(\"Follow!\");\n    } else if (this.initialFollowState == \"followed\") {\n        this.$button.text(\"Unfollow!\");\n    }\n}\n\nFollowToggle.prototype.handleClick = function() {\n    this.$button.on(\"click\", (e) => {\n        e.preventDefault();\n        // debugger\n        if (this.initialFollowState == \"unfollowed\") {\n            twitterAPIUtil.clickFollowAjax(this.userId);\n            this.initialFollowState = \"followed\";\n        } else if (this.initialFollowState == \"followed\") {\n            twitterAPIUtil.clickUnfollowAjax(this.userId);\n            this.initialFollowState = \"unfollowed\";\n        }\n        // this.$button.attr(\"initialFollowState\")\n        \n    })\n}\n\n\nmodule.exports = FollowToggle;","const twitterAPIUtil = {\n\n  clickFollowAjax: (userId) => {\n    return $.ajax({\n      method: \"POST\",\n      url:`/users/${userId}/follow`,\n      dataType: \"json\",\n    })\n    \n  },\n  \n  clickUnfollowAjax: (userId) => {\n    return $.ajax({\n      method: \"DELETE\",\n      url: `/users/${userId}/follow`,\n      dataType: \"json\",\n    })\n    \n\n  }\n\n\n}\n\nmodule.exports = twitterAPIUtil;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const FollowToggle = require(\"./follow_toggle\");\n\n\n\n\n\n\n\n\n\n$(() =>{\n    $(\".follow-toggle\").each(function (idx, button){\n        // debugger\n        new FollowToggle($(button));\n    })\n    // setEventHandlers();\n});"],"sourceRoot":""}